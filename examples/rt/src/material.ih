#ifndef MATERIAL_ISPC_H
#define MATERIAL_ISPC_H

enum MATERIAL_TYPE {
	LAMBERTIAN
};

struct Material {
	MATERIAL_TYPE type;
	Vec3f albedo;
};

struct Lambertian {
	Material mat;
};

export void make_lambertian(uniform const Material * uniform * uniform out, uniform const Vec3f * uniform albedo){
	uniform Lambertian * uniform lambertian = uniform new Lambertian;
	lambertian->mat.type = LAMBERTIAN;
	lambertian->mat.albedo = *albedo;
	*out = (uniform Material * uniform)lambertian;
}
Vec3f shade_lambertian(uniform const Material *mat, const Vec3f w_o, const Vec3f w_i){
	uniform Lambertian *lambertian = (uniform Lambertian *)mat;
	return lambertian->mat.albedo * M_1_PI;
}
export void drop_lambertian(uniform const Material * uniform mat){
	uniform Lambertian * uniform lambertian = (uniform Lambertian * uniform)mat;
	delete lambertian;
}

#endif

